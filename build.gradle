plugins {
    id "java"
    id "org.sonarqube" version "3.1.1"
    id "jacoco"
}

sourceCompatibility=1.8
targetCompatibility=1.8

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.30',
            'org.slf4j:slf4j-simple:1.7.30'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1',
        group: 'org.mockito', name: 'mockito-core', version: '1.10.16'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

jacocoTestReport {
    reports {
        html.enabled false
        xml.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "pujc:spaceinvaders"
        property "sonar.projectName", "pujc-spaceinvaders"
        property "sonar.sources", "src/main"
        property "sonar.tests", "src/test"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.java.binaries", "build/classes"
        property "sonar.exclusions", "**/*Generated.java"
    }
}

// Do not generate reports for individual projects
tasks.named("jacocoTestReport") {
    enabled = true
}

ext {
    javaMainClass = "interfaz.InterfazSpaceInvaders"
}

task runWithExec(type: Exec) {
    dependsOn build
    group = "Execution"
    description = "Run the main class with ExecTask"
    commandLine "java", "-classpath", sourceSets.main.runtimeClasspath.getAsPath(), javaMainClass
}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

gradle.startParameter.continueOnFailure = true
tasks['sonarqube'].dependsOn test
